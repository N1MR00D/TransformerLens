[tool.poetry]
name = "transformer-lens"
version = "0.0.0" # This is automatically set by the CD pipeline on release
description = "An implementation of transformers tailored for mechanistic interpretability."
authors = ["Neel Nanda <77788841+neelnanda-io@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "transformer_lens"}]

[tool.poetry.dependencies]
python = ">=3.7.4,<4.0"
einops = ">=0.6.0"
numpy = [{ version = ">=1.21", python = "<3.10" },
         { version = ">=1.23", python = ">=3.10" }]
torch = [{version = ">=1.10, <2.0.0", python = "<3.8"}, # PyTorch 2 requires Python 3.8+
         { version = ">=1.10", python = ">=3.8" }] # See PyTorch 2 fix below
datasets = ">=2.7.1"
transformers = ">=4.25.1"
tqdm = ">=4.64.1"
pandas = ">=1.1.5"
wandb = ">=0.13.5"
fancy-einsum = ">=0.0.3"
rich = ">=12.6.0"
jaxtyping = ">=0.2.11"
sphinx = {version = "5.2.3", optional = true, python = ">=3.8,<3.10"}
sphinxcontrib-napoleon = {version = ">=0.7", optional = true, python = ">=3.8,<3.10"}
sphinx-autobuild = {version = ">=2021.3.14", optional = true, python = ">=3.8,<3.10"}
furo = {version = ">=2022.12.7", optional = true, python = ">=3.8,<3.10"}
myst-parser = {version = ">=0.18.1", optional = true, python = ">=3.8,<3.10"}
tabulate= {version = ">=0.9.0", optional = true, python = ">=3.8,<3.10"}
beartype = "^0.14.1"
# PyTorch 2.1.0 Bug Fix PyTorch didn't put their dependencies metadata into all wheels for 2.1.0, so
# it doesn't work with Poetry. This is a known bug - the workaround is to place them manually here
# (from the one wheel that did correctly list them). This was broken in 2.0.1 and the fix wasn't
# made for 2.1.0, however Meta are aware of the issue and once it is fixed (and the torch version
# requirement bumped) this should be removed. Note also the python version is used to specify that
# this is only added where v2 torch is installed (as per the torch version requirement above).
# https://github.com/pytorch/pytorch/issues/100974
# https://github.com/python-poetry/poetry/issues/7902#issuecomment-1583078794
nvidia-cublas-cu11 = { version = ">=11.10.3.66", platform = 'linux' }
nvidia-cuda-cupti-cu11 = { version = ">=11.7.101", platform = 'linux' }
nvidia-cuda-nvrtc-cu11 = { version = ">=11.7.99", platform = 'linux' }
nvidia-cuda-runtime-cu11 = { version = ">=11.7.99", platform = 'linux' }
nvidia-cudnn-cu11 = { version = ">=8.5.0.96", platform = 'linux' }
nvidia-cufft-cu11 = { version = ">=10.9.0.58", platform = 'linux' }
nvidia-curand-cu11 = { version = ">=10.2.10.91", platform = 'linux' }
nvidia-cusolver-cu11 = { version = ">=11.4.0.1", platform = 'linux' }
nvidia-cusparse-cu11 = { version = ">=11.7.4.91", platform = 'linux' }
nvidia-nccl-cu11 = { version = ">=2.14.3", platform = 'linux' }
nvidia-nvtx-cu11 = { version = ">=11.7.91", platform = 'linux' }
triton = { version = ">=2.0.0", platform = 'linux' }
# End PyTorch 2.1.0 Bug Fix


[tool.poetry.group.dev.dependencies]
pytest = ">=7.2.0"
pytest-cov = ">=4.0.0"
mypy = ">=0.991"
jupyter = ">=1.0.0"
circuitsvis = ">=1.38.1"
plotly = ">=5.12.0"
isort = "5.8.0"
black = "^23.3.0"
pycln = "^2.1.3"

[tool.poetry.group.jupyter.dependencies]
jupyterlab = ">=3.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.extras]
docs = ["Sphinx", "sphinx-autobuild", "sphinxcontrib-napoleon", "furo", "myst_parser","tabulate"]

[tool.pytest.ini_options]
filterwarnings = [
    "ignore:pkg_resources is deprecated as an API:DeprecationWarning",
    # Ignore numpy.distutils deprecation warning caused by pandas
    # More info: https://numpy.org/doc/stable/reference/distutils.html#module-numpy.distutils
    "ignore:distutils Version classes are deprecated:DeprecationWarning"
]
addopts = "--jaxtyping-packages=transformer_lens,beartype.beartype"

[tool.isort]
profile = "black"
extend_skip = ["__init__.py"]

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true

[tool.pylint.TYPECHECK]
# Fix for Pytorch member existence checks
generated-members = "torch.*"

[tool.pylint.DESIGN]
max-args = 10
max-locals = 30

[tool.pylint."MESSAGES CONTROL"]
disable = "redefined-builtin" # Disable redefined builtin functions

[tool.black]
# Exclude snapshot tests
exclude = '''
(
/snapshots/
)
'''